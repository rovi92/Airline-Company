#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace compagniaAerea
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="myUniboAirlines")]
	public partial class myDatabaseUniboAirlineDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAereo(Aereo instance);
    partial void UpdateAereo(Aereo instance);
    partial void DeleteAereo(Aereo instance);
    partial void InsertVolo_attuale(Volo_attuale instance);
    partial void UpdateVolo_attuale(Volo_attuale instance);
    partial void DeleteVolo_attuale(Volo_attuale instance);
    partial void InsertAeroporto(Aeroporto instance);
    partial void UpdateAeroporto(Aeroporto instance);
    partial void DeleteAeroporto(Aeroporto instance);
    partial void InsertBabaglio_Imbarcato(Babaglio_Imbarcato instance);
    partial void UpdateBabaglio_Imbarcato(Babaglio_Imbarcato instance);
    partial void DeleteBabaglio_Imbarcato(Babaglio_Imbarcato instance);
    partial void InsertBiglietto(Biglietto instance);
    partial void UpdateBiglietto(Biglietto instance);
    partial void DeleteBiglietto(Biglietto instance);
    partial void InsertClasse(Classe instance);
    partial void UpdateClasse(Classe instance);
    partial void DeleteClasse(Classe instance);
    partial void InsertComfort(Comfort instance);
    partial void UpdateComfort(Comfort instance);
    partial void DeleteComfort(Comfort instance);
    partial void InsertComfort_inclusi(Comfort_inclusi instance);
    partial void UpdateComfort_inclusi(Comfort_inclusi instance);
    partial void DeleteComfort_inclusi(Comfort_inclusi instance);
    partial void InsertPagamento(Pagamento instance);
    partial void UpdatePagamento(Pagamento instance);
    partial void DeletePagamento(Pagamento instance);
    partial void InsertPasseggero(Passeggero instance);
    partial void UpdatePasseggero(Passeggero instance);
    partial void DeletePasseggero(Passeggero instance);
    partial void InsertPersonale(Personale instance);
    partial void UpdatePersonale(Personale instance);
    partial void DeletePersonale(Personale instance);
    partial void InsertPiano_di_volo(Piano_di_volo instance);
    partial void UpdatePiano_di_volo(Piano_di_volo instance);
    partial void DeletePiano_di_volo(Piano_di_volo instance);
    partial void InsertPrenotazione(Prenotazione instance);
    partial void UpdatePrenotazione(Prenotazione instance);
    partial void DeletePrenotazione(Prenotazione instance);
    partial void InsertPrezzo_bagaglio_imbarcato(Prezzo_bagaglio_imbarcato instance);
    partial void UpdatePrezzo_bagaglio_imbarcato(Prezzo_bagaglio_imbarcato instance);
    partial void DeletePrezzo_bagaglio_imbarcato(Prezzo_bagaglio_imbarcato instance);
    partial void InsertTariffario(Tariffario instance);
    partial void UpdateTariffario(Tariffario instance);
    partial void DeleteTariffario(Tariffario instance);
    partial void InsertTratta(Tratta instance);
    partial void UpdateTratta(Tratta instance);
    partial void DeleteTratta(Tratta instance);
    #endregion
		
		public myDatabaseUniboAirlineDataContext() : 
				base(global::compagniaAerea.Properties.Settings.Default.myUniboAirlinesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public myDatabaseUniboAirlineDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDatabaseUniboAirlineDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDatabaseUniboAirlineDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDatabaseUniboAirlineDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aereo> Aereo
		{
			get
			{
				return this.GetTable<Aereo>();
			}
		}
		
		public System.Data.Linq.Table<Volo_attuale> Volo_attuale
		{
			get
			{
				return this.GetTable<Volo_attuale>();
			}
		}
		
		public System.Data.Linq.Table<Aeroporto> Aeroporto
		{
			get
			{
				return this.GetTable<Aeroporto>();
			}
		}
		
		public System.Data.Linq.Table<Babaglio_Imbarcato> Babaglio_Imbarcato
		{
			get
			{
				return this.GetTable<Babaglio_Imbarcato>();
			}
		}
		
		public System.Data.Linq.Table<Biglietto> Biglietto
		{
			get
			{
				return this.GetTable<Biglietto>();
			}
		}
		
		public System.Data.Linq.Table<Classe> Classe
		{
			get
			{
				return this.GetTable<Classe>();
			}
		}
		
		public System.Data.Linq.Table<Comfort> Comfort
		{
			get
			{
				return this.GetTable<Comfort>();
			}
		}
		
		public System.Data.Linq.Table<Comfort_inclusi> Comfort_inclusi
		{
			get
			{
				return this.GetTable<Comfort_inclusi>();
			}
		}
		
		public System.Data.Linq.Table<Pagamento> Pagamento
		{
			get
			{
				return this.GetTable<Pagamento>();
			}
		}
		
		public System.Data.Linq.Table<Passeggero> Passeggero
		{
			get
			{
				return this.GetTable<Passeggero>();
			}
		}
		
		public System.Data.Linq.Table<Personale> Personale
		{
			get
			{
				return this.GetTable<Personale>();
			}
		}
		
		public System.Data.Linq.Table<Piano_di_volo> Piano_di_volo
		{
			get
			{
				return this.GetTable<Piano_di_volo>();
			}
		}
		
		public System.Data.Linq.Table<Prenotazione> Prenotazione
		{
			get
			{
				return this.GetTable<Prenotazione>();
			}
		}
		
		public System.Data.Linq.Table<Prezzo_bagaglio_imbarcato> Prezzo_bagaglio_imbarcato
		{
			get
			{
				return this.GetTable<Prezzo_bagaglio_imbarcato>();
			}
		}
		
		public System.Data.Linq.Table<Tariffario> Tariffario
		{
			get
			{
				return this.GetTable<Tariffario>();
			}
		}
		
		public System.Data.Linq.Table<Tratta> Tratta
		{
			get
			{
				return this.GetTable<Tratta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aereo")]
	public partial class Aereo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nome;
		
		private string _modello;
		
		private int _capacità_economy;
		
		private int _capacità_buisness;
		
		private int _capacità_first;
		
		private EntitySet<Tratta> _Tratta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnmodelloChanging(string value);
    partial void OnmodelloChanged();
    partial void Oncapacità_economyChanging(int value);
    partial void Oncapacità_economyChanged();
    partial void Oncapacità_buisnessChanging(int value);
    partial void Oncapacità_buisnessChanged();
    partial void Oncapacità_firstChanging(int value);
    partial void Oncapacità_firstChanged();
    #endregion
		
		public Aereo()
		{
			this._Tratta = new EntitySet<Tratta>(new Action<Tratta>(this.attach_Tratta), new Action<Tratta>(this.detach_Tratta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modello", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string modello
		{
			get
			{
				return this._modello;
			}
			set
			{
				if ((this._modello != value))
				{
					this.OnmodelloChanging(value);
					this.SendPropertyChanging();
					this._modello = value;
					this.SendPropertyChanged("modello");
					this.OnmodelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacità_economy", DbType="Int NOT NULL")]
		public int capacità_economy
		{
			get
			{
				return this._capacità_economy;
			}
			set
			{
				if ((this._capacità_economy != value))
				{
					this.Oncapacità_economyChanging(value);
					this.SendPropertyChanging();
					this._capacità_economy = value;
					this.SendPropertyChanged("capacità_economy");
					this.Oncapacità_economyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacità_buisness", DbType="Int NOT NULL")]
		public int capacità_buisness
		{
			get
			{
				return this._capacità_buisness;
			}
			set
			{
				if ((this._capacità_buisness != value))
				{
					this.Oncapacità_buisnessChanging(value);
					this.SendPropertyChanging();
					this._capacità_buisness = value;
					this.SendPropertyChanged("capacità_buisness");
					this.Oncapacità_buisnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacità_first", DbType="Int NOT NULL")]
		public int capacità_first
		{
			get
			{
				return this._capacità_first;
			}
			set
			{
				if ((this._capacità_first != value))
				{
					this.Oncapacità_firstChanging(value);
					this.SendPropertyChanging();
					this._capacità_first = value;
					this.SendPropertyChanged("capacità_first");
					this.Oncapacità_firstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aereo_Tratta", Storage="_Tratta", ThisKey="nome,modello", OtherKey="nome,modello")]
		public EntitySet<Tratta> Tratta
		{
			get
			{
				return this._Tratta;
			}
			set
			{
				this._Tratta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tratta(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Aereo = this;
		}
		
		private void detach_Tratta(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Aereo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volo_attuale")]
	public partial class Volo_attuale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPersonale;
		
		private System.TimeSpan _orario_partenza;
		
		private System.DateTime _data_partenza;
		
		private int _gate_partenza;
		
		private EntityRef<Personale> _Personale;
		
		private EntityRef<Tratta> _Tratta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersonaleChanging(int value);
    partial void OnidPersonaleChanged();
    partial void Onorario_partenzaChanging(System.TimeSpan value);
    partial void Onorario_partenzaChanged();
    partial void Ondata_partenzaChanging(System.DateTime value);
    partial void Ondata_partenzaChanged();
    partial void Ongate_partenzaChanging(int value);
    partial void Ongate_partenzaChanged();
    #endregion
		
		public Volo_attuale()
		{
			this._Personale = default(EntityRef<Personale>);
			this._Tratta = default(EntityRef<Tratta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersonale", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPersonale
		{
			get
			{
				return this._idPersonale;
			}
			set
			{
				if ((this._idPersonale != value))
				{
					if (this._Personale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonaleChanging(value);
					this.SendPropertyChanging();
					this._idPersonale = value;
					this.SendPropertyChanged("idPersonale");
					this.OnidPersonaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orario_partenza", DbType="Time NOT NULL", IsPrimaryKey=true)]
		public System.TimeSpan orario_partenza
		{
			get
			{
				return this._orario_partenza;
			}
			set
			{
				if ((this._orario_partenza != value))
				{
					if (this._Tratta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorario_partenzaChanging(value);
					this.SendPropertyChanging();
					this._orario_partenza = value;
					this.SendPropertyChanged("orario_partenza");
					this.Onorario_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_partenza", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime data_partenza
		{
			get
			{
				return this._data_partenza;
			}
			set
			{
				if ((this._data_partenza != value))
				{
					if (this._Tratta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondata_partenzaChanging(value);
					this.SendPropertyChanging();
					this._data_partenza = value;
					this.SendPropertyChanged("data_partenza");
					this.Ondata_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gate_partenza", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int gate_partenza
		{
			get
			{
				return this._gate_partenza;
			}
			set
			{
				if ((this._gate_partenza != value))
				{
					if (this._Tratta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongate_partenzaChanging(value);
					this.SendPropertyChanging();
					this._gate_partenza = value;
					this.SendPropertyChanged("gate_partenza");
					this.Ongate_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personale_Volo_attuale", Storage="_Personale", ThisKey="idPersonale", OtherKey="idPersonale", IsForeignKey=true)]
		public Personale Personale
		{
			get
			{
				return this._Personale.Entity;
			}
			set
			{
				Personale previousValue = this._Personale.Entity;
				if (((previousValue != value) 
							|| (this._Personale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personale.Entity = null;
						previousValue.Volo_attuale.Remove(this);
					}
					this._Personale.Entity = value;
					if ((value != null))
					{
						value.Volo_attuale.Add(this);
						this._idPersonale = value.idPersonale;
					}
					else
					{
						this._idPersonale = default(int);
					}
					this.SendPropertyChanged("Personale");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tratta_Volo_attuale", Storage="_Tratta", ThisKey="orario_partenza,data_partenza,gate_partenza", OtherKey="orario_partenza,data_partenza,gate_partenza", IsForeignKey=true)]
		public Tratta Tratta
		{
			get
			{
				return this._Tratta.Entity;
			}
			set
			{
				Tratta previousValue = this._Tratta.Entity;
				if (((previousValue != value) 
							|| (this._Tratta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tratta.Entity = null;
						previousValue.Volo_attuale.Remove(this);
					}
					this._Tratta.Entity = value;
					if ((value != null))
					{
						value.Volo_attuale.Add(this);
						this._orario_partenza = value.orario_partenza;
						this._data_partenza = value.data_partenza;
						this._gate_partenza = value.gate_partenza;
					}
					else
					{
						this._orario_partenza = default(System.TimeSpan);
						this._data_partenza = default(System.DateTime);
						this._gate_partenza = default(int);
					}
					this.SendPropertyChanged("Tratta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aeroporto")]
	public partial class Aeroporto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nome;
		
		private string _indirizzo;
		
		private string _email;
		
		private string _telefono;
		
		private string _città;
		
		private EntitySet<Piano_di_volo> _Piano_di_volo;
		
		private EntitySet<Piano_di_volo> _Piano_di_volo1;
		
		private EntitySet<Tratta> _Tratta;
		
		private EntitySet<Tratta> _Tratta1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnindirizzoChanging(string value);
    partial void OnindirizzoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncittàChanging(string value);
    partial void OncittàChanged();
    #endregion
		
		public Aeroporto()
		{
			this._Piano_di_volo = new EntitySet<Piano_di_volo>(new Action<Piano_di_volo>(this.attach_Piano_di_volo), new Action<Piano_di_volo>(this.detach_Piano_di_volo));
			this._Piano_di_volo1 = new EntitySet<Piano_di_volo>(new Action<Piano_di_volo>(this.attach_Piano_di_volo1), new Action<Piano_di_volo>(this.detach_Piano_di_volo1));
			this._Tratta = new EntitySet<Tratta>(new Action<Tratta>(this.attach_Tratta), new Action<Tratta>(this.detach_Tratta));
			this._Tratta1 = new EntitySet<Tratta>(new Action<Tratta>(this.attach_Tratta1), new Action<Tratta>(this.detach_Tratta1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indirizzo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string indirizzo
		{
			get
			{
				return this._indirizzo;
			}
			set
			{
				if ((this._indirizzo != value))
				{
					this.OnindirizzoChanging(value);
					this.SendPropertyChanging();
					this._indirizzo = value;
					this.SendPropertyChanged("indirizzo");
					this.OnindirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_città", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string città
		{
			get
			{
				return this._città;
			}
			set
			{
				if ((this._città != value))
				{
					this.OncittàChanging(value);
					this.SendPropertyChanging();
					this._città = value;
					this.SendPropertyChanged("città");
					this.OncittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Piano_di_volo", Storage="_Piano_di_volo", ThisKey="nome", OtherKey="aeroporto_partenza")]
		public EntitySet<Piano_di_volo> Piano_di_volo
		{
			get
			{
				return this._Piano_di_volo;
			}
			set
			{
				this._Piano_di_volo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Piano_di_volo1", Storage="_Piano_di_volo1", ThisKey="nome", OtherKey="aeroporto_arrivo")]
		public EntitySet<Piano_di_volo> Piano_di_volo1
		{
			get
			{
				return this._Piano_di_volo1;
			}
			set
			{
				this._Piano_di_volo1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Tratta", Storage="_Tratta", ThisKey="nome", OtherKey="aeroporto_partenza")]
		public EntitySet<Tratta> Tratta
		{
			get
			{
				return this._Tratta;
			}
			set
			{
				this._Tratta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Tratta1", Storage="_Tratta1", ThisKey="nome", OtherKey="aeroporto_arrivo")]
		public EntitySet<Tratta> Tratta1
		{
			get
			{
				return this._Tratta1;
			}
			set
			{
				this._Tratta1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Piano_di_volo(Piano_di_volo entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto = this;
		}
		
		private void detach_Piano_di_volo(Piano_di_volo entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto = null;
		}
		
		private void attach_Piano_di_volo1(Piano_di_volo entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto1 = this;
		}
		
		private void detach_Piano_di_volo1(Piano_di_volo entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto1 = null;
		}
		
		private void attach_Tratta(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto = this;
		}
		
		private void detach_Tratta(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto = null;
		}
		
		private void attach_Tratta1(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto1 = this;
		}
		
		private void detach_Tratta1(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Aeroporto1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Babaglio_Imbarcato")]
	public partial class Babaglio_Imbarcato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _range_pesi;
		
		private int _codice_biglietto;
		
		private EntityRef<Biglietto> _Biglietto;
		
		private EntityRef<Prezzo_bagaglio_imbarcato> _Prezzo_bagaglio_imbarcato;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrange_pesiChanging(int value);
    partial void Onrange_pesiChanged();
    partial void Oncodice_bigliettoChanging(int value);
    partial void Oncodice_bigliettoChanged();
    #endregion
		
		public Babaglio_Imbarcato()
		{
			this._Biglietto = default(EntityRef<Biglietto>);
			this._Prezzo_bagaglio_imbarcato = default(EntityRef<Prezzo_bagaglio_imbarcato>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_range_pesi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int range_pesi
		{
			get
			{
				return this._range_pesi;
			}
			set
			{
				if ((this._range_pesi != value))
				{
					if (this._Prezzo_bagaglio_imbarcato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrange_pesiChanging(value);
					this.SendPropertyChanging();
					this._range_pesi = value;
					this.SendPropertyChanged("range_pesi");
					this.Onrange_pesiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codice_biglietto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int codice_biglietto
		{
			get
			{
				return this._codice_biglietto;
			}
			set
			{
				if ((this._codice_biglietto != value))
				{
					if (this._Biglietto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncodice_bigliettoChanging(value);
					this.SendPropertyChanging();
					this._codice_biglietto = value;
					this.SendPropertyChanged("codice_biglietto");
					this.Oncodice_bigliettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biglietto_Babaglio_Imbarcato", Storage="_Biglietto", ThisKey="codice_biglietto", OtherKey="codice_biglietto", IsForeignKey=true)]
		public Biglietto Biglietto
		{
			get
			{
				return this._Biglietto.Entity;
			}
			set
			{
				Biglietto previousValue = this._Biglietto.Entity;
				if (((previousValue != value) 
							|| (this._Biglietto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Biglietto.Entity = null;
						previousValue.Babaglio_Imbarcato.Remove(this);
					}
					this._Biglietto.Entity = value;
					if ((value != null))
					{
						value.Babaglio_Imbarcato.Add(this);
						this._codice_biglietto = value.codice_biglietto;
					}
					else
					{
						this._codice_biglietto = default(int);
					}
					this.SendPropertyChanged("Biglietto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prezzo_bagaglio_imbarcato_Babaglio_Imbarcato", Storage="_Prezzo_bagaglio_imbarcato", ThisKey="range_pesi", OtherKey="range_pesi", IsForeignKey=true)]
		public Prezzo_bagaglio_imbarcato Prezzo_bagaglio_imbarcato
		{
			get
			{
				return this._Prezzo_bagaglio_imbarcato.Entity;
			}
			set
			{
				Prezzo_bagaglio_imbarcato previousValue = this._Prezzo_bagaglio_imbarcato.Entity;
				if (((previousValue != value) 
							|| (this._Prezzo_bagaglio_imbarcato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prezzo_bagaglio_imbarcato.Entity = null;
						previousValue.Babaglio_Imbarcato.Remove(this);
					}
					this._Prezzo_bagaglio_imbarcato.Entity = value;
					if ((value != null))
					{
						value.Babaglio_Imbarcato.Add(this);
						this._range_pesi = value.range_pesi;
					}
					else
					{
						this._range_pesi = default(int);
					}
					this.SendPropertyChanged("Prezzo_bagaglio_imbarcato");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Biglietto")]
	public partial class Biglietto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codice_biglietto;
		
		private int _idPasseggero;
		
		private int _idPrenotazione;
		
		private EntitySet<Babaglio_Imbarcato> _Babaglio_Imbarcato;
		
		private EntitySet<Comfort_inclusi> _Comfort_inclusi;
		
		private EntityRef<Passeggero> _Passeggero;
		
		private EntityRef<Prenotazione> _Prenotazione;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncodice_bigliettoChanging(int value);
    partial void Oncodice_bigliettoChanged();
    partial void OnidPasseggeroChanging(int value);
    partial void OnidPasseggeroChanged();
    partial void OnidPrenotazioneChanging(int value);
    partial void OnidPrenotazioneChanged();
    #endregion
		
		public Biglietto()
		{
			this._Babaglio_Imbarcato = new EntitySet<Babaglio_Imbarcato>(new Action<Babaglio_Imbarcato>(this.attach_Babaglio_Imbarcato), new Action<Babaglio_Imbarcato>(this.detach_Babaglio_Imbarcato));
			this._Comfort_inclusi = new EntitySet<Comfort_inclusi>(new Action<Comfort_inclusi>(this.attach_Comfort_inclusi), new Action<Comfort_inclusi>(this.detach_Comfort_inclusi));
			this._Passeggero = default(EntityRef<Passeggero>);
			this._Prenotazione = default(EntityRef<Prenotazione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codice_biglietto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int codice_biglietto
		{
			get
			{
				return this._codice_biglietto;
			}
			set
			{
				if ((this._codice_biglietto != value))
				{
					this.Oncodice_bigliettoChanging(value);
					this.SendPropertyChanging();
					this._codice_biglietto = value;
					this.SendPropertyChanged("codice_biglietto");
					this.Oncodice_bigliettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPasseggero", DbType="Int NOT NULL")]
		public int idPasseggero
		{
			get
			{
				return this._idPasseggero;
			}
			set
			{
				if ((this._idPasseggero != value))
				{
					if (this._Passeggero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPasseggeroChanging(value);
					this.SendPropertyChanging();
					this._idPasseggero = value;
					this.SendPropertyChanged("idPasseggero");
					this.OnidPasseggeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrenotazione", DbType="Int NOT NULL")]
		public int idPrenotazione
		{
			get
			{
				return this._idPrenotazione;
			}
			set
			{
				if ((this._idPrenotazione != value))
				{
					if (this._Prenotazione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._idPrenotazione = value;
					this.SendPropertyChanged("idPrenotazione");
					this.OnidPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biglietto_Babaglio_Imbarcato", Storage="_Babaglio_Imbarcato", ThisKey="codice_biglietto", OtherKey="codice_biglietto")]
		public EntitySet<Babaglio_Imbarcato> Babaglio_Imbarcato
		{
			get
			{
				return this._Babaglio_Imbarcato;
			}
			set
			{
				this._Babaglio_Imbarcato.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biglietto_Comfort_inclusi", Storage="_Comfort_inclusi", ThisKey="codice_biglietto", OtherKey="idBiglietto")]
		public EntitySet<Comfort_inclusi> Comfort_inclusi
		{
			get
			{
				return this._Comfort_inclusi;
			}
			set
			{
				this._Comfort_inclusi.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passeggero_Biglietto", Storage="_Passeggero", ThisKey="idPasseggero", OtherKey="idPasseggero", IsForeignKey=true)]
		public Passeggero Passeggero
		{
			get
			{
				return this._Passeggero.Entity;
			}
			set
			{
				Passeggero previousValue = this._Passeggero.Entity;
				if (((previousValue != value) 
							|| (this._Passeggero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passeggero.Entity = null;
						previousValue.Biglietto.Remove(this);
					}
					this._Passeggero.Entity = value;
					if ((value != null))
					{
						value.Biglietto.Add(this);
						this._idPasseggero = value.idPasseggero;
					}
					else
					{
						this._idPasseggero = default(int);
					}
					this.SendPropertyChanged("Passeggero");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenotazione_Biglietto", Storage="_Prenotazione", ThisKey="idPrenotazione", OtherKey="idPrenotazione", IsForeignKey=true)]
		public Prenotazione Prenotazione
		{
			get
			{
				return this._Prenotazione.Entity;
			}
			set
			{
				Prenotazione previousValue = this._Prenotazione.Entity;
				if (((previousValue != value) 
							|| (this._Prenotazione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prenotazione.Entity = null;
						previousValue.Biglietto.Remove(this);
					}
					this._Prenotazione.Entity = value;
					if ((value != null))
					{
						value.Biglietto.Add(this);
						this._idPrenotazione = value.idPrenotazione;
					}
					else
					{
						this._idPrenotazione = default(int);
					}
					this.SendPropertyChanged("Prenotazione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Babaglio_Imbarcato(Babaglio_Imbarcato entity)
		{
			this.SendPropertyChanging();
			entity.Biglietto = this;
		}
		
		private void detach_Babaglio_Imbarcato(Babaglio_Imbarcato entity)
		{
			this.SendPropertyChanging();
			entity.Biglietto = null;
		}
		
		private void attach_Comfort_inclusi(Comfort_inclusi entity)
		{
			this.SendPropertyChanging();
			entity.Biglietto = this;
		}
		
		private void detach_Comfort_inclusi(Comfort_inclusi entity)
		{
			this.SendPropertyChanging();
			entity.Biglietto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classe")]
	public partial class Classe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idClasse;
		
		private string _descrizione;
		
		private double _prezzo;
		
		private EntitySet<Tariffario> _Tariffario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClasseChanging(int value);
    partial void OnidClasseChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    partial void OnprezzoChanging(double value);
    partial void OnprezzoChanged();
    #endregion
		
		public Classe()
		{
			this._Tariffario = new EntitySet<Tariffario>(new Action<Tariffario>(this.attach_Tariffario), new Action<Tariffario>(this.detach_Tariffario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClasse", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idClasse
		{
			get
			{
				return this._idClasse;
			}
			set
			{
				if ((this._idClasse != value))
				{
					this.OnidClasseChanging(value);
					this.SendPropertyChanging();
					this._idClasse = value;
					this.SendPropertyChanged("idClasse");
					this.OnidClasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezzo", DbType="Float NOT NULL")]
		public double prezzo
		{
			get
			{
				return this._prezzo;
			}
			set
			{
				if ((this._prezzo != value))
				{
					this.OnprezzoChanging(value);
					this.SendPropertyChanging();
					this._prezzo = value;
					this.SendPropertyChanged("prezzo");
					this.OnprezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classe_Tariffario", Storage="_Tariffario", ThisKey="idClasse", OtherKey="idClasse")]
		public EntitySet<Tariffario> Tariffario
		{
			get
			{
				return this._Tariffario;
			}
			set
			{
				this._Tariffario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffario(Tariffario entity)
		{
			this.SendPropertyChanging();
			entity.Classe = this;
		}
		
		private void detach_Tariffario(Tariffario entity)
		{
			this.SendPropertyChanging();
			entity.Classe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comfort")]
	public partial class Comfort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idComfort;
		
		private string _descrizione;
		
		private double _prezzo;
		
		private EntitySet<Comfort_inclusi> _Comfort_inclusi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidComfortChanging(int value);
    partial void OnidComfortChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    partial void OnprezzoChanging(double value);
    partial void OnprezzoChanged();
    #endregion
		
		public Comfort()
		{
			this._Comfort_inclusi = new EntitySet<Comfort_inclusi>(new Action<Comfort_inclusi>(this.attach_Comfort_inclusi), new Action<Comfort_inclusi>(this.detach_Comfort_inclusi));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComfort", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idComfort
		{
			get
			{
				return this._idComfort;
			}
			set
			{
				if ((this._idComfort != value))
				{
					this.OnidComfortChanging(value);
					this.SendPropertyChanging();
					this._idComfort = value;
					this.SendPropertyChanged("idComfort");
					this.OnidComfortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezzo", DbType="Float NOT NULL")]
		public double prezzo
		{
			get
			{
				return this._prezzo;
			}
			set
			{
				if ((this._prezzo != value))
				{
					this.OnprezzoChanging(value);
					this.SendPropertyChanging();
					this._prezzo = value;
					this.SendPropertyChanged("prezzo");
					this.OnprezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comfort_Comfort_inclusi", Storage="_Comfort_inclusi", ThisKey="idComfort", OtherKey="idComfort")]
		public EntitySet<Comfort_inclusi> Comfort_inclusi
		{
			get
			{
				return this._Comfort_inclusi;
			}
			set
			{
				this._Comfort_inclusi.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comfort_inclusi(Comfort_inclusi entity)
		{
			this.SendPropertyChanging();
			entity.Comfort = this;
		}
		
		private void detach_Comfort_inclusi(Comfort_inclusi entity)
		{
			this.SendPropertyChanging();
			entity.Comfort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comfort_inclusi")]
	public partial class Comfort_inclusi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBiglietto;
		
		private int _idComfort;
		
		private EntityRef<Biglietto> _Biglietto;
		
		private EntityRef<Comfort> _Comfort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBigliettoChanging(int value);
    partial void OnidBigliettoChanged();
    partial void OnidComfortChanging(int value);
    partial void OnidComfortChanged();
    #endregion
		
		public Comfort_inclusi()
		{
			this._Biglietto = default(EntityRef<Biglietto>);
			this._Comfort = default(EntityRef<Comfort>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBiglietto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idBiglietto
		{
			get
			{
				return this._idBiglietto;
			}
			set
			{
				if ((this._idBiglietto != value))
				{
					if (this._Biglietto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBigliettoChanging(value);
					this.SendPropertyChanging();
					this._idBiglietto = value;
					this.SendPropertyChanged("idBiglietto");
					this.OnidBigliettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComfort", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idComfort
		{
			get
			{
				return this._idComfort;
			}
			set
			{
				if ((this._idComfort != value))
				{
					if (this._Comfort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComfortChanging(value);
					this.SendPropertyChanging();
					this._idComfort = value;
					this.SendPropertyChanged("idComfort");
					this.OnidComfortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biglietto_Comfort_inclusi", Storage="_Biglietto", ThisKey="idBiglietto", OtherKey="codice_biglietto", IsForeignKey=true)]
		public Biglietto Biglietto
		{
			get
			{
				return this._Biglietto.Entity;
			}
			set
			{
				Biglietto previousValue = this._Biglietto.Entity;
				if (((previousValue != value) 
							|| (this._Biglietto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Biglietto.Entity = null;
						previousValue.Comfort_inclusi.Remove(this);
					}
					this._Biglietto.Entity = value;
					if ((value != null))
					{
						value.Comfort_inclusi.Add(this);
						this._idBiglietto = value.codice_biglietto;
					}
					else
					{
						this._idBiglietto = default(int);
					}
					this.SendPropertyChanged("Biglietto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comfort_Comfort_inclusi", Storage="_Comfort", ThisKey="idComfort", OtherKey="idComfort", IsForeignKey=true)]
		public Comfort Comfort
		{
			get
			{
				return this._Comfort.Entity;
			}
			set
			{
				Comfort previousValue = this._Comfort.Entity;
				if (((previousValue != value) 
							|| (this._Comfort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comfort.Entity = null;
						previousValue.Comfort_inclusi.Remove(this);
					}
					this._Comfort.Entity = value;
					if ((value != null))
					{
						value.Comfort_inclusi.Add(this);
						this._idComfort = value.idComfort;
					}
					else
					{
						this._idComfort = default(int);
					}
					this.SendPropertyChanged("Comfort");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pagamento")]
	public partial class Pagamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPagamento;
		
		private System.DateTime _data_pagamento;
		
		private string _tipo_pagamento;
		
		private int _idPrenotazione;
		
		private EntityRef<Prenotazione> _Prenotazione;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPagamentoChanging(int value);
    partial void OnidPagamentoChanged();
    partial void Ondata_pagamentoChanging(System.DateTime value);
    partial void Ondata_pagamentoChanged();
    partial void Ontipo_pagamentoChanging(string value);
    partial void Ontipo_pagamentoChanged();
    partial void OnidPrenotazioneChanging(int value);
    partial void OnidPrenotazioneChanged();
    #endregion
		
		public Pagamento()
		{
			this._Prenotazione = default(EntityRef<Prenotazione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPagamento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPagamento
		{
			get
			{
				return this._idPagamento;
			}
			set
			{
				if ((this._idPagamento != value))
				{
					this.OnidPagamentoChanging(value);
					this.SendPropertyChanging();
					this._idPagamento = value;
					this.SendPropertyChanged("idPagamento");
					this.OnidPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_pagamento", DbType="Date NOT NULL")]
		public System.DateTime data_pagamento
		{
			get
			{
				return this._data_pagamento;
			}
			set
			{
				if ((this._data_pagamento != value))
				{
					this.Ondata_pagamentoChanging(value);
					this.SendPropertyChanging();
					this._data_pagamento = value;
					this.SendPropertyChanged("data_pagamento");
					this.Ondata_pagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_pagamento", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string tipo_pagamento
		{
			get
			{
				return this._tipo_pagamento;
			}
			set
			{
				if ((this._tipo_pagamento != value))
				{
					this.Ontipo_pagamentoChanging(value);
					this.SendPropertyChanging();
					this._tipo_pagamento = value;
					this.SendPropertyChanged("tipo_pagamento");
					this.Ontipo_pagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrenotazione", DbType="Int NOT NULL")]
		public int idPrenotazione
		{
			get
			{
				return this._idPrenotazione;
			}
			set
			{
				if ((this._idPrenotazione != value))
				{
					if (this._Prenotazione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._idPrenotazione = value;
					this.SendPropertyChanged("idPrenotazione");
					this.OnidPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenotazione_Pagamento", Storage="_Prenotazione", ThisKey="idPrenotazione", OtherKey="idPrenotazione", IsForeignKey=true)]
		public Prenotazione Prenotazione
		{
			get
			{
				return this._Prenotazione.Entity;
			}
			set
			{
				Prenotazione previousValue = this._Prenotazione.Entity;
				if (((previousValue != value) 
							|| (this._Prenotazione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prenotazione.Entity = null;
						previousValue.Pagamento.Remove(this);
					}
					this._Prenotazione.Entity = value;
					if ((value != null))
					{
						value.Pagamento.Add(this);
						this._idPrenotazione = value.idPrenotazione;
					}
					else
					{
						this._idPrenotazione = default(int);
					}
					this.SendPropertyChanged("Prenotazione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Passeggero")]
	public partial class Passeggero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPasseggero;
		
		private string _nome;
		
		private string _cognome;
		
		private string _indirizzo;
		
		private string _email;
		
		private string _città;
		
		private int _CAP;
		
		private string _CF;
		
		private EntitySet<Biglietto> _Biglietto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPasseggeroChanging(int value);
    partial void OnidPasseggeroChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OnindirizzoChanging(string value);
    partial void OnindirizzoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncittàChanging(string value);
    partial void OncittàChanged();
    partial void OnCAPChanging(int value);
    partial void OnCAPChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    #endregion
		
		public Passeggero()
		{
			this._Biglietto = new EntitySet<Biglietto>(new Action<Biglietto>(this.attach_Biglietto), new Action<Biglietto>(this.detach_Biglietto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPasseggero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPasseggero
		{
			get
			{
				return this._idPasseggero;
			}
			set
			{
				if ((this._idPasseggero != value))
				{
					this.OnidPasseggeroChanging(value);
					this.SendPropertyChanging();
					this._idPasseggero = value;
					this.SendPropertyChanged("idPasseggero");
					this.OnidPasseggeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indirizzo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string indirizzo
		{
			get
			{
				return this._indirizzo;
			}
			set
			{
				if ((this._indirizzo != value))
				{
					this.OnindirizzoChanging(value);
					this.SendPropertyChanging();
					this._indirizzo = value;
					this.SendPropertyChanged("indirizzo");
					this.OnindirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_città", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string città
		{
			get
			{
				return this._città;
			}
			set
			{
				if ((this._città != value))
				{
					this.OncittàChanging(value);
					this.SendPropertyChanging();
					this._città = value;
					this.SendPropertyChanged("città");
					this.OncittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="Int NOT NULL")]
		public int CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passeggero_Biglietto", Storage="_Biglietto", ThisKey="idPasseggero", OtherKey="idPasseggero")]
		public EntitySet<Biglietto> Biglietto
		{
			get
			{
				return this._Biglietto;
			}
			set
			{
				this._Biglietto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Biglietto(Biglietto entity)
		{
			this.SendPropertyChanging();
			entity.Passeggero = this;
		}
		
		private void detach_Biglietto(Biglietto entity)
		{
			this.SendPropertyChanging();
			entity.Passeggero = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personale")]
	public partial class Personale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPersonale;
		
		private string _nome;
		
		private string _cognome;
		
		private string _indirizzo;
		
		private System.DateTime _data_di_nascita;
		
		private System.DateTime _data_assunzione;
		
		private string _email;
		
		private string _telefono;
		
		private string _sesso;
		
		private bool _pilota;
		
		private bool _hostess;
		
		private EntitySet<Volo_attuale> _Volo_attuale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersonaleChanging(int value);
    partial void OnidPersonaleChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OnindirizzoChanging(string value);
    partial void OnindirizzoChanged();
    partial void Ondata_di_nascitaChanging(System.DateTime value);
    partial void Ondata_di_nascitaChanged();
    partial void Ondata_assunzioneChanging(System.DateTime value);
    partial void Ondata_assunzioneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnsessoChanging(string value);
    partial void OnsessoChanged();
    partial void OnpilotaChanging(bool value);
    partial void OnpilotaChanged();
    partial void OnhostessChanging(bool value);
    partial void OnhostessChanged();
    #endregion
		
		public Personale()
		{
			this._Volo_attuale = new EntitySet<Volo_attuale>(new Action<Volo_attuale>(this.attach_Volo_attuale), new Action<Volo_attuale>(this.detach_Volo_attuale));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersonale", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPersonale
		{
			get
			{
				return this._idPersonale;
			}
			set
			{
				if ((this._idPersonale != value))
				{
					this.OnidPersonaleChanging(value);
					this.SendPropertyChanging();
					this._idPersonale = value;
					this.SendPropertyChanged("idPersonale");
					this.OnidPersonaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indirizzo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string indirizzo
		{
			get
			{
				return this._indirizzo;
			}
			set
			{
				if ((this._indirizzo != value))
				{
					this.OnindirizzoChanging(value);
					this.SendPropertyChanging();
					this._indirizzo = value;
					this.SendPropertyChanged("indirizzo");
					this.OnindirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_di_nascita", DbType="Date NOT NULL")]
		public System.DateTime data_di_nascita
		{
			get
			{
				return this._data_di_nascita;
			}
			set
			{
				if ((this._data_di_nascita != value))
				{
					this.Ondata_di_nascitaChanging(value);
					this.SendPropertyChanging();
					this._data_di_nascita = value;
					this.SendPropertyChanged("data_di_nascita");
					this.Ondata_di_nascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_assunzione", DbType="Date NOT NULL")]
		public System.DateTime data_assunzione
		{
			get
			{
				return this._data_assunzione;
			}
			set
			{
				if ((this._data_assunzione != value))
				{
					this.Ondata_assunzioneChanging(value);
					this.SendPropertyChanging();
					this._data_assunzione = value;
					this.SendPropertyChanged("data_assunzione");
					this.Ondata_assunzioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sesso", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string sesso
		{
			get
			{
				return this._sesso;
			}
			set
			{
				if ((this._sesso != value))
				{
					this.OnsessoChanging(value);
					this.SendPropertyChanging();
					this._sesso = value;
					this.SendPropertyChanged("sesso");
					this.OnsessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pilota", DbType="Bit NOT NULL")]
		public bool pilota
		{
			get
			{
				return this._pilota;
			}
			set
			{
				if ((this._pilota != value))
				{
					this.OnpilotaChanging(value);
					this.SendPropertyChanging();
					this._pilota = value;
					this.SendPropertyChanged("pilota");
					this.OnpilotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostess", DbType="Bit NOT NULL")]
		public bool hostess
		{
			get
			{
				return this._hostess;
			}
			set
			{
				if ((this._hostess != value))
				{
					this.OnhostessChanging(value);
					this.SendPropertyChanging();
					this._hostess = value;
					this.SendPropertyChanged("hostess");
					this.OnhostessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personale_Volo_attuale", Storage="_Volo_attuale", ThisKey="idPersonale", OtherKey="idPersonale")]
		public EntitySet<Volo_attuale> Volo_attuale
		{
			get
			{
				return this._Volo_attuale;
			}
			set
			{
				this._Volo_attuale.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Volo_attuale(Volo_attuale entity)
		{
			this.SendPropertyChanging();
			entity.Personale = this;
		}
		
		private void detach_Volo_attuale(Volo_attuale entity)
		{
			this.SendPropertyChanging();
			entity.Personale = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Piano_di_volo")]
	public partial class Piano_di_volo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _numero_volo;
		
		private string _aeroporto_partenza;
		
		private string _aeroporto_arrivo;
		
		private System.DateTime _data_partenza;
		
		private System.TimeSpan _orario_partenza;
		
		private System.DateTime _data_arrivo;
		
		private System.TimeSpan _orario_arrivo;
		
		private System.Nullable<bool> _cancellato;
		
		private EntitySet<Tariffario> _Tariffario;
		
		private EntitySet<Tratta> _Tratta;
		
		private EntityRef<Aeroporto> _Aeroporto;
		
		private EntityRef<Aeroporto> _Aeroporto1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnumero_voloChanging(int value);
    partial void Onnumero_voloChanged();
    partial void Onaeroporto_partenzaChanging(string value);
    partial void Onaeroporto_partenzaChanged();
    partial void Onaeroporto_arrivoChanging(string value);
    partial void Onaeroporto_arrivoChanged();
    partial void Ondata_partenzaChanging(System.DateTime value);
    partial void Ondata_partenzaChanged();
    partial void Onorario_partenzaChanging(System.TimeSpan value);
    partial void Onorario_partenzaChanged();
    partial void Ondata_arrivoChanging(System.DateTime value);
    partial void Ondata_arrivoChanged();
    partial void Onorario_arrivoChanging(System.TimeSpan value);
    partial void Onorario_arrivoChanged();
    partial void OncancellatoChanging(System.Nullable<bool> value);
    partial void OncancellatoChanged();
    #endregion
		
		public Piano_di_volo()
		{
			this._Tariffario = new EntitySet<Tariffario>(new Action<Tariffario>(this.attach_Tariffario), new Action<Tariffario>(this.detach_Tariffario));
			this._Tratta = new EntitySet<Tratta>(new Action<Tratta>(this.attach_Tratta), new Action<Tratta>(this.detach_Tratta));
			this._Aeroporto = default(EntityRef<Aeroporto>);
			this._Aeroporto1 = default(EntityRef<Aeroporto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_volo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int numero_volo
		{
			get
			{
				return this._numero_volo;
			}
			set
			{
				if ((this._numero_volo != value))
				{
					this.Onnumero_voloChanging(value);
					this.SendPropertyChanging();
					this._numero_volo = value;
					this.SendPropertyChanged("numero_volo");
					this.Onnumero_voloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aeroporto_partenza", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string aeroporto_partenza
		{
			get
			{
				return this._aeroporto_partenza;
			}
			set
			{
				if ((this._aeroporto_partenza != value))
				{
					if (this._Aeroporto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaeroporto_partenzaChanging(value);
					this.SendPropertyChanging();
					this._aeroporto_partenza = value;
					this.SendPropertyChanged("aeroporto_partenza");
					this.Onaeroporto_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aeroporto_arrivo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string aeroporto_arrivo
		{
			get
			{
				return this._aeroporto_arrivo;
			}
			set
			{
				if ((this._aeroporto_arrivo != value))
				{
					if (this._Aeroporto1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaeroporto_arrivoChanging(value);
					this.SendPropertyChanging();
					this._aeroporto_arrivo = value;
					this.SendPropertyChanged("aeroporto_arrivo");
					this.Onaeroporto_arrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_partenza", DbType="Date NOT NULL")]
		public System.DateTime data_partenza
		{
			get
			{
				return this._data_partenza;
			}
			set
			{
				if ((this._data_partenza != value))
				{
					this.Ondata_partenzaChanging(value);
					this.SendPropertyChanging();
					this._data_partenza = value;
					this.SendPropertyChanged("data_partenza");
					this.Ondata_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orario_partenza", DbType="Time NOT NULL")]
		public System.TimeSpan orario_partenza
		{
			get
			{
				return this._orario_partenza;
			}
			set
			{
				if ((this._orario_partenza != value))
				{
					this.Onorario_partenzaChanging(value);
					this.SendPropertyChanging();
					this._orario_partenza = value;
					this.SendPropertyChanged("orario_partenza");
					this.Onorario_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_arrivo", DbType="Date NOT NULL")]
		public System.DateTime data_arrivo
		{
			get
			{
				return this._data_arrivo;
			}
			set
			{
				if ((this._data_arrivo != value))
				{
					this.Ondata_arrivoChanging(value);
					this.SendPropertyChanging();
					this._data_arrivo = value;
					this.SendPropertyChanged("data_arrivo");
					this.Ondata_arrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orario_arrivo", DbType="Time NOT NULL")]
		public System.TimeSpan orario_arrivo
		{
			get
			{
				return this._orario_arrivo;
			}
			set
			{
				if ((this._orario_arrivo != value))
				{
					this.Onorario_arrivoChanging(value);
					this.SendPropertyChanging();
					this._orario_arrivo = value;
					this.SendPropertyChanged("orario_arrivo");
					this.Onorario_arrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancellato", DbType="Bit")]
		public System.Nullable<bool> cancellato
		{
			get
			{
				return this._cancellato;
			}
			set
			{
				if ((this._cancellato != value))
				{
					this.OncancellatoChanging(value);
					this.SendPropertyChanging();
					this._cancellato = value;
					this.SendPropertyChanged("cancellato");
					this.OncancellatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Piano_di_volo_Tariffario", Storage="_Tariffario", ThisKey="numero_volo", OtherKey="numero_volo")]
		public EntitySet<Tariffario> Tariffario
		{
			get
			{
				return this._Tariffario;
			}
			set
			{
				this._Tariffario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Piano_di_volo_Tratta", Storage="_Tratta", ThisKey="numero_volo", OtherKey="numero_volo")]
		public EntitySet<Tratta> Tratta
		{
			get
			{
				return this._Tratta;
			}
			set
			{
				this._Tratta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Piano_di_volo", Storage="_Aeroporto", ThisKey="aeroporto_partenza", OtherKey="nome", IsForeignKey=true)]
		public Aeroporto Aeroporto
		{
			get
			{
				return this._Aeroporto.Entity;
			}
			set
			{
				Aeroporto previousValue = this._Aeroporto.Entity;
				if (((previousValue != value) 
							|| (this._Aeroporto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aeroporto.Entity = null;
						previousValue.Piano_di_volo.Remove(this);
					}
					this._Aeroporto.Entity = value;
					if ((value != null))
					{
						value.Piano_di_volo.Add(this);
						this._aeroporto_partenza = value.nome;
					}
					else
					{
						this._aeroporto_partenza = default(string);
					}
					this.SendPropertyChanged("Aeroporto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Piano_di_volo1", Storage="_Aeroporto1", ThisKey="aeroporto_arrivo", OtherKey="nome", IsForeignKey=true)]
		public Aeroporto Aeroporto1
		{
			get
			{
				return this._Aeroporto1.Entity;
			}
			set
			{
				Aeroporto previousValue = this._Aeroporto1.Entity;
				if (((previousValue != value) 
							|| (this._Aeroporto1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aeroporto1.Entity = null;
						previousValue.Piano_di_volo1.Remove(this);
					}
					this._Aeroporto1.Entity = value;
					if ((value != null))
					{
						value.Piano_di_volo1.Add(this);
						this._aeroporto_arrivo = value.nome;
					}
					else
					{
						this._aeroporto_arrivo = default(string);
					}
					this.SendPropertyChanged("Aeroporto1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffario(Tariffario entity)
		{
			this.SendPropertyChanging();
			entity.Piano_di_volo = this;
		}
		
		private void detach_Tariffario(Tariffario entity)
		{
			this.SendPropertyChanging();
			entity.Piano_di_volo = null;
		}
		
		private void attach_Tratta(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Piano_di_volo = this;
		}
		
		private void detach_Tratta(Tratta entity)
		{
			this.SendPropertyChanging();
			entity.Piano_di_volo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prenotazione")]
	public partial class Prenotazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPrenotazione;
		
		private System.DateTime _data_prenotazione;
		
		private int _numero_persone;
		
		private double _totale;
		
		private int _idTariffa;
		
		private EntitySet<Biglietto> _Biglietto;
		
		private EntitySet<Pagamento> _Pagamento;
		
		private EntityRef<Tariffario> _Tariffario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPrenotazioneChanging(int value);
    partial void OnidPrenotazioneChanged();
    partial void Ondata_prenotazioneChanging(System.DateTime value);
    partial void Ondata_prenotazioneChanged();
    partial void Onnumero_personeChanging(int value);
    partial void Onnumero_personeChanged();
    partial void OntotaleChanging(double value);
    partial void OntotaleChanged();
    partial void OnidTariffaChanging(int value);
    partial void OnidTariffaChanged();
    #endregion
		
		public Prenotazione()
		{
			this._Biglietto = new EntitySet<Biglietto>(new Action<Biglietto>(this.attach_Biglietto), new Action<Biglietto>(this.detach_Biglietto));
			this._Pagamento = new EntitySet<Pagamento>(new Action<Pagamento>(this.attach_Pagamento), new Action<Pagamento>(this.detach_Pagamento));
			this._Tariffario = default(EntityRef<Tariffario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrenotazione", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPrenotazione
		{
			get
			{
				return this._idPrenotazione;
			}
			set
			{
				if ((this._idPrenotazione != value))
				{
					this.OnidPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._idPrenotazione = value;
					this.SendPropertyChanged("idPrenotazione");
					this.OnidPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_prenotazione", DbType="Date NOT NULL")]
		public System.DateTime data_prenotazione
		{
			get
			{
				return this._data_prenotazione;
			}
			set
			{
				if ((this._data_prenotazione != value))
				{
					this.Ondata_prenotazioneChanging(value);
					this.SendPropertyChanging();
					this._data_prenotazione = value;
					this.SendPropertyChanged("data_prenotazione");
					this.Ondata_prenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_persone", DbType="Int NOT NULL")]
		public int numero_persone
		{
			get
			{
				return this._numero_persone;
			}
			set
			{
				if ((this._numero_persone != value))
				{
					this.Onnumero_personeChanging(value);
					this.SendPropertyChanging();
					this._numero_persone = value;
					this.SendPropertyChanged("numero_persone");
					this.Onnumero_personeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totale", DbType="Float NOT NULL")]
		public double totale
		{
			get
			{
				return this._totale;
			}
			set
			{
				if ((this._totale != value))
				{
					this.OntotaleChanging(value);
					this.SendPropertyChanging();
					this._totale = value;
					this.SendPropertyChanged("totale");
					this.OntotaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTariffa", DbType="Int NOT NULL")]
		public int idTariffa
		{
			get
			{
				return this._idTariffa;
			}
			set
			{
				if ((this._idTariffa != value))
				{
					if (this._Tariffario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTariffaChanging(value);
					this.SendPropertyChanging();
					this._idTariffa = value;
					this.SendPropertyChanged("idTariffa");
					this.OnidTariffaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenotazione_Biglietto", Storage="_Biglietto", ThisKey="idPrenotazione", OtherKey="idPrenotazione")]
		public EntitySet<Biglietto> Biglietto
		{
			get
			{
				return this._Biglietto;
			}
			set
			{
				this._Biglietto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenotazione_Pagamento", Storage="_Pagamento", ThisKey="idPrenotazione", OtherKey="idPrenotazione")]
		public EntitySet<Pagamento> Pagamento
		{
			get
			{
				return this._Pagamento;
			}
			set
			{
				this._Pagamento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tariffario_Prenotazione", Storage="_Tariffario", ThisKey="idTariffa", OtherKey="idTariffa", IsForeignKey=true)]
		public Tariffario Tariffario
		{
			get
			{
				return this._Tariffario.Entity;
			}
			set
			{
				Tariffario previousValue = this._Tariffario.Entity;
				if (((previousValue != value) 
							|| (this._Tariffario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tariffario.Entity = null;
						previousValue.Prenotazione.Remove(this);
					}
					this._Tariffario.Entity = value;
					if ((value != null))
					{
						value.Prenotazione.Add(this);
						this._idTariffa = value.idTariffa;
					}
					else
					{
						this._idTariffa = default(int);
					}
					this.SendPropertyChanged("Tariffario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Biglietto(Biglietto entity)
		{
			this.SendPropertyChanging();
			entity.Prenotazione = this;
		}
		
		private void detach_Biglietto(Biglietto entity)
		{
			this.SendPropertyChanging();
			entity.Prenotazione = null;
		}
		
		private void attach_Pagamento(Pagamento entity)
		{
			this.SendPropertyChanging();
			entity.Prenotazione = this;
		}
		
		private void detach_Pagamento(Pagamento entity)
		{
			this.SendPropertyChanging();
			entity.Prenotazione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prezzo_bagaglio_imbarcato")]
	public partial class Prezzo_bagaglio_imbarcato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _range_pesi;
		
		private double _prezzo;
		
		private EntitySet<Babaglio_Imbarcato> _Babaglio_Imbarcato;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrange_pesiChanging(int value);
    partial void Onrange_pesiChanged();
    partial void OnprezzoChanging(double value);
    partial void OnprezzoChanged();
    #endregion
		
		public Prezzo_bagaglio_imbarcato()
		{
			this._Babaglio_Imbarcato = new EntitySet<Babaglio_Imbarcato>(new Action<Babaglio_Imbarcato>(this.attach_Babaglio_Imbarcato), new Action<Babaglio_Imbarcato>(this.detach_Babaglio_Imbarcato));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_range_pesi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int range_pesi
		{
			get
			{
				return this._range_pesi;
			}
			set
			{
				if ((this._range_pesi != value))
				{
					this.Onrange_pesiChanging(value);
					this.SendPropertyChanging();
					this._range_pesi = value;
					this.SendPropertyChanged("range_pesi");
					this.Onrange_pesiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezzo", DbType="Float NOT NULL")]
		public double prezzo
		{
			get
			{
				return this._prezzo;
			}
			set
			{
				if ((this._prezzo != value))
				{
					this.OnprezzoChanging(value);
					this.SendPropertyChanging();
					this._prezzo = value;
					this.SendPropertyChanged("prezzo");
					this.OnprezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prezzo_bagaglio_imbarcato_Babaglio_Imbarcato", Storage="_Babaglio_Imbarcato", ThisKey="range_pesi", OtherKey="range_pesi")]
		public EntitySet<Babaglio_Imbarcato> Babaglio_Imbarcato
		{
			get
			{
				return this._Babaglio_Imbarcato;
			}
			set
			{
				this._Babaglio_Imbarcato.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Babaglio_Imbarcato(Babaglio_Imbarcato entity)
		{
			this.SendPropertyChanging();
			entity.Prezzo_bagaglio_imbarcato = this;
		}
		
		private void detach_Babaglio_Imbarcato(Babaglio_Imbarcato entity)
		{
			this.SendPropertyChanging();
			entity.Prezzo_bagaglio_imbarcato = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tariffario")]
	public partial class Tariffario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTariffa;
		
		private double _tariffa_solo_andata;
		
		private int _numero_volo;
		
		private int _idClasse;
		
		private EntitySet<Prenotazione> _Prenotazione;
		
		private EntityRef<Classe> _Classe;
		
		private EntityRef<Piano_di_volo> _Piano_di_volo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTariffaChanging(int value);
    partial void OnidTariffaChanged();
    partial void Ontariffa_solo_andataChanging(double value);
    partial void Ontariffa_solo_andataChanged();
    partial void Onnumero_voloChanging(int value);
    partial void Onnumero_voloChanged();
    partial void OnidClasseChanging(int value);
    partial void OnidClasseChanged();
    #endregion
		
		public Tariffario()
		{
			this._Prenotazione = new EntitySet<Prenotazione>(new Action<Prenotazione>(this.attach_Prenotazione), new Action<Prenotazione>(this.detach_Prenotazione));
			this._Classe = default(EntityRef<Classe>);
			this._Piano_di_volo = default(EntityRef<Piano_di_volo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTariffa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTariffa
		{
			get
			{
				return this._idTariffa;
			}
			set
			{
				if ((this._idTariffa != value))
				{
					this.OnidTariffaChanging(value);
					this.SendPropertyChanging();
					this._idTariffa = value;
					this.SendPropertyChanged("idTariffa");
					this.OnidTariffaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tariffa_solo_andata", DbType="Float NOT NULL")]
		public double tariffa_solo_andata
		{
			get
			{
				return this._tariffa_solo_andata;
			}
			set
			{
				if ((this._tariffa_solo_andata != value))
				{
					this.Ontariffa_solo_andataChanging(value);
					this.SendPropertyChanging();
					this._tariffa_solo_andata = value;
					this.SendPropertyChanged("tariffa_solo_andata");
					this.Ontariffa_solo_andataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_volo", DbType="Int NOT NULL")]
		public int numero_volo
		{
			get
			{
				return this._numero_volo;
			}
			set
			{
				if ((this._numero_volo != value))
				{
					if (this._Piano_di_volo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnumero_voloChanging(value);
					this.SendPropertyChanging();
					this._numero_volo = value;
					this.SendPropertyChanged("numero_volo");
					this.Onnumero_voloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClasse", DbType="Int NOT NULL")]
		public int idClasse
		{
			get
			{
				return this._idClasse;
			}
			set
			{
				if ((this._idClasse != value))
				{
					if (this._Classe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClasseChanging(value);
					this.SendPropertyChanging();
					this._idClasse = value;
					this.SendPropertyChanged("idClasse");
					this.OnidClasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tariffario_Prenotazione", Storage="_Prenotazione", ThisKey="idTariffa", OtherKey="idTariffa")]
		public EntitySet<Prenotazione> Prenotazione
		{
			get
			{
				return this._Prenotazione;
			}
			set
			{
				this._Prenotazione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classe_Tariffario", Storage="_Classe", ThisKey="idClasse", OtherKey="idClasse", IsForeignKey=true)]
		public Classe Classe
		{
			get
			{
				return this._Classe.Entity;
			}
			set
			{
				Classe previousValue = this._Classe.Entity;
				if (((previousValue != value) 
							|| (this._Classe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classe.Entity = null;
						previousValue.Tariffario.Remove(this);
					}
					this._Classe.Entity = value;
					if ((value != null))
					{
						value.Tariffario.Add(this);
						this._idClasse = value.idClasse;
					}
					else
					{
						this._idClasse = default(int);
					}
					this.SendPropertyChanged("Classe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Piano_di_volo_Tariffario", Storage="_Piano_di_volo", ThisKey="numero_volo", OtherKey="numero_volo", IsForeignKey=true)]
		public Piano_di_volo Piano_di_volo
		{
			get
			{
				return this._Piano_di_volo.Entity;
			}
			set
			{
				Piano_di_volo previousValue = this._Piano_di_volo.Entity;
				if (((previousValue != value) 
							|| (this._Piano_di_volo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Piano_di_volo.Entity = null;
						previousValue.Tariffario.Remove(this);
					}
					this._Piano_di_volo.Entity = value;
					if ((value != null))
					{
						value.Tariffario.Add(this);
						this._numero_volo = value.numero_volo;
					}
					else
					{
						this._numero_volo = default(int);
					}
					this.SendPropertyChanged("Piano_di_volo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prenotazione(Prenotazione entity)
		{
			this.SendPropertyChanging();
			entity.Tariffario = this;
		}
		
		private void detach_Prenotazione(Prenotazione entity)
		{
			this.SendPropertyChanging();
			entity.Tariffario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tratta")]
	public partial class Tratta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.TimeSpan _orario_partenza;
		
		private System.TimeSpan _orario_arrivo;
		
		private System.DateTime _data_partenza;
		
		private System.DateTime _data_arrivo;
		
		private int _gate_partenza;
		
		private int _gate_arrivo;
		
		private int _posti_economy;
		
		private int _posti_buisness;
		
		private int _posti_first;
		
		private string _nome;
		
		private string _modello;
		
		private int _numero_volo;
		
		private string _aeroporto_partenza;
		
		private string _aeroporto_arrivo;
		
		private EntitySet<Volo_attuale> _Volo_attuale;
		
		private EntityRef<Aereo> _Aereo;
		
		private EntityRef<Aeroporto> _Aeroporto;
		
		private EntityRef<Aeroporto> _Aeroporto1;
		
		private EntityRef<Piano_di_volo> _Piano_di_volo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorario_partenzaChanging(System.TimeSpan value);
    partial void Onorario_partenzaChanged();
    partial void Onorario_arrivoChanging(System.TimeSpan value);
    partial void Onorario_arrivoChanged();
    partial void Ondata_partenzaChanging(System.DateTime value);
    partial void Ondata_partenzaChanged();
    partial void Ondata_arrivoChanging(System.DateTime value);
    partial void Ondata_arrivoChanged();
    partial void Ongate_partenzaChanging(int value);
    partial void Ongate_partenzaChanged();
    partial void Ongate_arrivoChanging(int value);
    partial void Ongate_arrivoChanged();
    partial void Onposti_economyChanging(int value);
    partial void Onposti_economyChanged();
    partial void Onposti_buisnessChanging(int value);
    partial void Onposti_buisnessChanged();
    partial void Onposti_firstChanging(int value);
    partial void Onposti_firstChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnmodelloChanging(string value);
    partial void OnmodelloChanged();
    partial void Onnumero_voloChanging(int value);
    partial void Onnumero_voloChanged();
    partial void Onaeroporto_partenzaChanging(string value);
    partial void Onaeroporto_partenzaChanged();
    partial void Onaeroporto_arrivoChanging(string value);
    partial void Onaeroporto_arrivoChanged();
    #endregion
		
		public Tratta()
		{
			this._Volo_attuale = new EntitySet<Volo_attuale>(new Action<Volo_attuale>(this.attach_Volo_attuale), new Action<Volo_attuale>(this.detach_Volo_attuale));
			this._Aereo = default(EntityRef<Aereo>);
			this._Aeroporto = default(EntityRef<Aeroporto>);
			this._Aeroporto1 = default(EntityRef<Aeroporto>);
			this._Piano_di_volo = default(EntityRef<Piano_di_volo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orario_partenza", DbType="Time NOT NULL", IsPrimaryKey=true)]
		public System.TimeSpan orario_partenza
		{
			get
			{
				return this._orario_partenza;
			}
			set
			{
				if ((this._orario_partenza != value))
				{
					this.Onorario_partenzaChanging(value);
					this.SendPropertyChanging();
					this._orario_partenza = value;
					this.SendPropertyChanged("orario_partenza");
					this.Onorario_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orario_arrivo", DbType="Time NOT NULL")]
		public System.TimeSpan orario_arrivo
		{
			get
			{
				return this._orario_arrivo;
			}
			set
			{
				if ((this._orario_arrivo != value))
				{
					this.Onorario_arrivoChanging(value);
					this.SendPropertyChanging();
					this._orario_arrivo = value;
					this.SendPropertyChanged("orario_arrivo");
					this.Onorario_arrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_partenza", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime data_partenza
		{
			get
			{
				return this._data_partenza;
			}
			set
			{
				if ((this._data_partenza != value))
				{
					this.Ondata_partenzaChanging(value);
					this.SendPropertyChanging();
					this._data_partenza = value;
					this.SendPropertyChanged("data_partenza");
					this.Ondata_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_arrivo", DbType="Date NOT NULL")]
		public System.DateTime data_arrivo
		{
			get
			{
				return this._data_arrivo;
			}
			set
			{
				if ((this._data_arrivo != value))
				{
					this.Ondata_arrivoChanging(value);
					this.SendPropertyChanging();
					this._data_arrivo = value;
					this.SendPropertyChanged("data_arrivo");
					this.Ondata_arrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gate_partenza", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int gate_partenza
		{
			get
			{
				return this._gate_partenza;
			}
			set
			{
				if ((this._gate_partenza != value))
				{
					this.Ongate_partenzaChanging(value);
					this.SendPropertyChanging();
					this._gate_partenza = value;
					this.SendPropertyChanged("gate_partenza");
					this.Ongate_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gate_arrivo", DbType="Int NOT NULL")]
		public int gate_arrivo
		{
			get
			{
				return this._gate_arrivo;
			}
			set
			{
				if ((this._gate_arrivo != value))
				{
					this.Ongate_arrivoChanging(value);
					this.SendPropertyChanging();
					this._gate_arrivo = value;
					this.SendPropertyChanged("gate_arrivo");
					this.Ongate_arrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posti_economy", DbType="Int NOT NULL")]
		public int posti_economy
		{
			get
			{
				return this._posti_economy;
			}
			set
			{
				if ((this._posti_economy != value))
				{
					this.Onposti_economyChanging(value);
					this.SendPropertyChanging();
					this._posti_economy = value;
					this.SendPropertyChanged("posti_economy");
					this.Onposti_economyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posti_buisness", DbType="Int NOT NULL")]
		public int posti_buisness
		{
			get
			{
				return this._posti_buisness;
			}
			set
			{
				if ((this._posti_buisness != value))
				{
					this.Onposti_buisnessChanging(value);
					this.SendPropertyChanging();
					this._posti_buisness = value;
					this.SendPropertyChanged("posti_buisness");
					this.Onposti_buisnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posti_first", DbType="Int NOT NULL")]
		public int posti_first
		{
			get
			{
				return this._posti_first;
			}
			set
			{
				if ((this._posti_first != value))
				{
					this.Onposti_firstChanging(value);
					this.SendPropertyChanging();
					this._posti_first = value;
					this.SendPropertyChanged("posti_first");
					this.Onposti_firstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					if (this._Aereo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modello", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string modello
		{
			get
			{
				return this._modello;
			}
			set
			{
				if ((this._modello != value))
				{
					if (this._Aereo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmodelloChanging(value);
					this.SendPropertyChanging();
					this._modello = value;
					this.SendPropertyChanged("modello");
					this.OnmodelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_volo", DbType="Int NOT NULL")]
		public int numero_volo
		{
			get
			{
				return this._numero_volo;
			}
			set
			{
				if ((this._numero_volo != value))
				{
					if (this._Piano_di_volo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnumero_voloChanging(value);
					this.SendPropertyChanging();
					this._numero_volo = value;
					this.SendPropertyChanged("numero_volo");
					this.Onnumero_voloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aeroporto_partenza", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string aeroporto_partenza
		{
			get
			{
				return this._aeroporto_partenza;
			}
			set
			{
				if ((this._aeroporto_partenza != value))
				{
					if (this._Aeroporto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaeroporto_partenzaChanging(value);
					this.SendPropertyChanging();
					this._aeroporto_partenza = value;
					this.SendPropertyChanged("aeroporto_partenza");
					this.Onaeroporto_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aeroporto_arrivo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string aeroporto_arrivo
		{
			get
			{
				return this._aeroporto_arrivo;
			}
			set
			{
				if ((this._aeroporto_arrivo != value))
				{
					if (this._Aeroporto1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaeroporto_arrivoChanging(value);
					this.SendPropertyChanging();
					this._aeroporto_arrivo = value;
					this.SendPropertyChanged("aeroporto_arrivo");
					this.Onaeroporto_arrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tratta_Volo_attuale", Storage="_Volo_attuale", ThisKey="orario_partenza,data_partenza,gate_partenza", OtherKey="orario_partenza,data_partenza,gate_partenza")]
		public EntitySet<Volo_attuale> Volo_attuale
		{
			get
			{
				return this._Volo_attuale;
			}
			set
			{
				this._Volo_attuale.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aereo_Tratta", Storage="_Aereo", ThisKey="nome,modello", OtherKey="nome,modello", IsForeignKey=true)]
		public Aereo Aereo
		{
			get
			{
				return this._Aereo.Entity;
			}
			set
			{
				Aereo previousValue = this._Aereo.Entity;
				if (((previousValue != value) 
							|| (this._Aereo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aereo.Entity = null;
						previousValue.Tratta.Remove(this);
					}
					this._Aereo.Entity = value;
					if ((value != null))
					{
						value.Tratta.Add(this);
						this._nome = value.nome;
						this._modello = value.modello;
					}
					else
					{
						this._nome = default(string);
						this._modello = default(string);
					}
					this.SendPropertyChanged("Aereo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Tratta", Storage="_Aeroporto", ThisKey="aeroporto_partenza", OtherKey="nome", IsForeignKey=true)]
		public Aeroporto Aeroporto
		{
			get
			{
				return this._Aeroporto.Entity;
			}
			set
			{
				Aeroporto previousValue = this._Aeroporto.Entity;
				if (((previousValue != value) 
							|| (this._Aeroporto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aeroporto.Entity = null;
						previousValue.Tratta.Remove(this);
					}
					this._Aeroporto.Entity = value;
					if ((value != null))
					{
						value.Tratta.Add(this);
						this._aeroporto_partenza = value.nome;
					}
					else
					{
						this._aeroporto_partenza = default(string);
					}
					this.SendPropertyChanged("Aeroporto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aeroporto_Tratta1", Storage="_Aeroporto1", ThisKey="aeroporto_arrivo", OtherKey="nome", IsForeignKey=true)]
		public Aeroporto Aeroporto1
		{
			get
			{
				return this._Aeroporto1.Entity;
			}
			set
			{
				Aeroporto previousValue = this._Aeroporto1.Entity;
				if (((previousValue != value) 
							|| (this._Aeroporto1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aeroporto1.Entity = null;
						previousValue.Tratta1.Remove(this);
					}
					this._Aeroporto1.Entity = value;
					if ((value != null))
					{
						value.Tratta1.Add(this);
						this._aeroporto_arrivo = value.nome;
					}
					else
					{
						this._aeroporto_arrivo = default(string);
					}
					this.SendPropertyChanged("Aeroporto1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Piano_di_volo_Tratta", Storage="_Piano_di_volo", ThisKey="numero_volo", OtherKey="numero_volo", IsForeignKey=true)]
		public Piano_di_volo Piano_di_volo
		{
			get
			{
				return this._Piano_di_volo.Entity;
			}
			set
			{
				Piano_di_volo previousValue = this._Piano_di_volo.Entity;
				if (((previousValue != value) 
							|| (this._Piano_di_volo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Piano_di_volo.Entity = null;
						previousValue.Tratta.Remove(this);
					}
					this._Piano_di_volo.Entity = value;
					if ((value != null))
					{
						value.Tratta.Add(this);
						this._numero_volo = value.numero_volo;
					}
					else
					{
						this._numero_volo = default(int);
					}
					this.SendPropertyChanged("Piano_di_volo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Volo_attuale(Volo_attuale entity)
		{
			this.SendPropertyChanging();
			entity.Tratta = this;
		}
		
		private void detach_Volo_attuale(Volo_attuale entity)
		{
			this.SendPropertyChanging();
			entity.Tratta = null;
		}
	}
}
#pragma warning restore 1591
